// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameRechargeInfo = "recharge_info"

// RechargeInfo mapped from table <recharge_info>
type RechargeInfo struct {
	ID                   int64     `gorm:"column:id;primaryKey;autoIncrement:true;comment:ID" json:"id"`                                        // ID
	TradeNumber          string    `gorm:"column:trade_number;not null;type:varchar(255);comment:Delivery service order number" json:"trade_number"`              // Delivery service order number
	ShopOrderNumber      string    `gorm:"column:shop_order_number;not null;type:varchar(255);comment:Store Order Number" json:"shop_order_number"`               // Store Order Number
	ShopType             int32     `gorm:"column:shop_type;not null;default:1;comment:Store Type 1-Taobao" json:"shop_type"`                    // Store Type 1-Taobao
	ShopGoodsID          string    `gorm:"column:shop_goods_id;not null;comment:Store - Product ID" json:"shop_goods_id"`                       // Store - Product ID
	ShopGoodsName        string    `gorm:"column:shop_goods_name;not null;comment:Store - Product Name" json:"shop_goods_name"`                 // Store - Product Name
	ShopAccountID        string    `gorm:"column:shop_account_id;not null;comment:Store - Recharge Account" json:"shop_account_id"`             // Store - Recharge Account
	ShopBuyerPhoneNumber string    `gorm:"column:shop_buyer_phone_number;not null;comment:Store Buyer Phone" json:"shop_buyer_phone_number"`    // Store Buyer Phone
	ShopBuyerID          string    `gorm:"column:shop_buyer_id;not null;comment:Store - Buyer ID" json:"shop_buyer_id"`                         // Store - Buyer ID
	ShopOrderCreateAt    time.Time `gorm:"column:shop_order_create_at;not null;comment:The timestamp of the store" json:"shop_order_create_at"` // The timestamp of the store
	Amount               float64   `gorm:"column:amount;not null;comment:Amount" json:"amount"`                                                 // Amount
	SingleAmount         float64   `gorm:"column:single_amount;not null;comment:Actual paid unit price of goods" json:"single_amount"`          // Actual paid unit price of goods
	TotalAmount          float64   `gorm:"column:total_amount;not null;comment:Total paid price of goods" json:"total_amount"`                  // Total paid price of goods
	Count                int32     `gorm:"column:count;not null;comment:Quantity to be shipped" json:"count"`                                   // Quantity to be shipped
	RealRechargeCount    int32     `gorm:"column:real_recharge_count;not null;comment:Actual recharge quantity" json:"real_recharge_count"`     // Actual recharge quantity
	TradeCreateAt        time.Time `gorm:"column:trade_create_at;not null" json:"trade_create_at"`
	TradeUpdateAt        time.Time `gorm:"column:trade_update_at;not null" json:"trade_update_at"`
	TryRechargeCount     int32     `gorm:"column:try_recharge_count;not null" json:"try_recharge_count"`
	Status               int32     `gorm:"column:status;not null;comment:Status: 0- Not processed yet; 2- Partial shipment of goods; 3- Delivery completed;" json:"status"` // Status: 0- Not processed yet; 2- Partial shipment of goods; 3- Delivery completed;
	GameMoney            int32     `gorm:"column:game_money;not null;comment:Number of game coins corresponding to each transaction" json:"game_money"`                     // Number of game coins corresponding to each transaction
	GameType             int32     `gorm:"column:game_type;not null;comment:game type 1-inter or 2-fee" json:"game_type"`                                                   // game type 1-inter or 2-fee
}

// TableName RechargeInfo's table name
func (*RechargeInfo) TableName() string {
	return TableNameRechargeInfo
}
